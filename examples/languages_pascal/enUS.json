{
	"BLOG": "Blog",
	"ABOUT": "About",
	"TALKS": "Talks",
	"GITHUB": "GitHub",
	"TWITTER": "Twitter",
	"COPY2015ALLRIGHTSRES": "\r\n            &copy; 2015. All rights reserved.\r\n        ",
	"PASCALPRECHT": "Pascal Precht",
	"THOUGHTSONVIMMASTERY": "Thoughts on Vim mastery and the future of the web",
	"INHERITANCEANDCOMPOS": "Inheritance and composition with Polymer",
	"14JUL2014": "14 Jul 2014",
	"ACTUALLYWEBCOMPONENT": "Actually, Web Components are a set of four different specifications. These are ",
	"HTMLIMPORTS": "HTML\r\n                Imports",
	"HTMLTEMPLATES": "HTML Templates",
	"CUSTOMELEMENTS": "Custom Elements",
	"AND": " and ",
	"SHADOWDOM": "Shadow\r\n                DOM",
	"IWILLNOTGOINTOMUCHDE": ". I will not go into much detail here since that's not the scope of this article. If you\r\n                want to learn more about Web Components in general, I recommend checking out the community project ",
	"WEBCOMPONENTSORG": "webcomponents.org",
	"WHICHISFULLOFUSEFULR": ", which is full of useful resources and\r\n                information about the technologies.",
	"WITHEVOLVINGSTANDARD": " With evolving standards come evolving tools, libraries and frameworks. When it comes to web components,\r\n                there are basically two frameworks that try to make your life easier: ",
	"XTAG": "X-Tag",
	"BYMOZILLAAND": "\r\n                by Mozilla and ",
	"POLYMER": "Polymer",
	"AGOOGLEPROJECT": ", a Google project. ",
	"BOTHUSETHESAMEPOLYFI": "Both use the\r\n                    same polyfills under the hood",
	"TOMAKETHEFOURWEBCOMP": " to make the four web component technologies work in all major\r\n                browsers. However, whereas X-Tag API abstracts only the imperative way of building web components, goes\r\n                Polymer a step further and also provides a declarative way.",
	"FOREXAMPLEDEFININGYO": "For example, defining your own custom element with Polymer looks something like this:"
}